<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net9.0-android35.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
		<OutputType>Exe</OutputType>
		<RootNamespace>RandomMovie</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<SkipValidateMauiImplicitPackageReferences>true</SkipValidateMauiImplicitPackageReferences>

		<!-- Display name -->
		<ApplicationTitle>RandomMovie</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.randommovie</ApplicationId>
		<ApplicationIdGuid>c0584bc9-5e0e-4104-bfd6-ca4d819847a6</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">23.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.19041.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.19041.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
		<WindowsAppSdkDeploymentManagerInitialize>false</WindowsAppSdkDeploymentManagerInitialize>
	</PropertyGroup>

	<PropertyGroup>
	  <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net9.0-windows10.0.19041.0</TargetFrameworks>
	  <WindowsPackageType>None</WindowsPackageType>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\icon512.png" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\icon512.png" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Maui" Version="11.2.0" />
		<PackageReference Include="HtmlAgilityPack" Version="1.12.0" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="9.0.4" />
		<PackageReference Include="Microsoft.Maui.Controls" Version="9.0.50" />
		<PackageReference Include="Utf8Json" Version="1.3.7" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="Controls\PopUp\ChooseCountry.xaml.cs">
	    <DependentUpon>ChooseCountry.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="Controls\PopUp\ChooseRatingFilter.xaml.cs">
	    <DependentUpon>ChooseRatingFilter.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="Controls\PopUp\ChooseGenre.xaml.cs">
	    <DependentUpon>ChooseGenre.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="Controls\PopUp\ChooseListPopUp.xaml.cs">
	    <DependentUpon>ChooseListPopUp.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="Controls\PopUp\InfoMessagePopUp.xaml.cs">
	    <DependentUpon>InfoMessagePopUp.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="Controls\PopUp\InfoPopUp.xaml.cs">
	    <DependentUpon>InfoPopUp.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="Resources\Localisation.de.Designer.cs">
	    <DependentUpon>Localisation.de.resx</DependentUpon>
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	  </Compile>
	  <Compile Update="Resources\Localisation.Designer.cs">
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	    <DependentUpon>Localisation.resx</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Update="Resources\Localisation.de.resx">
	    <LastGenOutput>Localisation.de.Designer.cs</LastGenOutput>
	    <Generator>ResXFileCodeGenerator</Generator>
	  </EmbeddedResource>
	  <EmbeddedResource Update="Resources\Localisation.resx">
	    <Generator>ResXFileCodeGenerator</Generator>
	    <LastGenOutput>Localisation.Designer.cs</LastGenOutput>
	  </EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="Controls\PopUp\ChooseCountry.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Controls\PopUp\ChooseRatingFilter.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Controls\PopUp\ChooseGenre.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Controls\PopUp\ChooseListPopUp.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Controls\PopUp\InfoMessagePopUp.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Controls\PopUp\InfoPopUp.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Controls\PopUp\ActivityIndicatorPopUp.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

	<ProjectExtensions><VisualStudio><UserProperties XamarinHotReloadDebuggerTimeoutExceptionRandomMovieHideInfoBar="True" XamarinHotReloadGenericExceptionInfoBarRandomMovieHideInfoBar="True" /></VisualStudio></ProjectExtensions>

</Project>
